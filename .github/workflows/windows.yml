name: Windows
on: 
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/macos.yml'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/macos.yml'
jobs:
  build:
    name: Build
    runs-on: windows-latest
    strategy:
      matrix:
        qt_ver: [5.14.2]
        qt_target: [desktop]
        qt_arch: [win64_msvc2017_64, win32_msvc2017, win64_mingw73]
        include:
          - qt_arch: win64_msvc2017_64
            msvc_arch: x64
            qt_arch_install: msvc2017_64
          - qt_arch: win32_msvc2017
            msvc_arch: x86
            qt_arch_install: msvc2017
          - qt_arch: win64_mingw73
            qt_arch_install: mingw64
    env:
      targetName: q5go
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.0.0
        with:
          # Version of Qt to install
          version: ${{ matrix.qt_ver }}
          # Target platform for build
          target: ${{ matrix.qt_target }}
          # Architecture for Windows/Android
          arch: ${{ matrix.qt_arch }}

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          submodules: true

      - name: build-msvc
        shell: cmd
        env:
          vc_arch: ${{ matrix.msvc_arch }}
          qt_arch: ${{ matrix.qt_arch }}
        run: |
	  if (${env:qt_arch} -ne mingw73) {
	     call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %vc_arch%
	  }
          mkdir build
          cd build
          qmake -r CONFIG+=release CONFIG+=qtquickcompiler ..\src\q5go.pro
          nmake
          dir
          dir release
          cd ..
      - name: package
        env:
          VCINSTALLDIR: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC'
          archiveName: ${{ env.targetName }}-${{ matrix.qt_arch }}
        shell: pwsh
        run: |
          dir
          New-Item -ItemType Directory tmp-install
          New-Item -ItemType Directory tmp-install\${env:archiveName}
          dir tmp-install
          Copy-Item build\Release\${env:targetName}'.exe' tmp-install\${env:archiveName}\
          windeployqt --qmldir . tmp-install\${env:archiveName}\${env:targetName}'.exe'
          Compress-Archive -Path tmp-install ${env:archiveName}'.zip'
          $name = ${env:archiveName}
          echo "::set-env name=packageName::$name"
          Write-Host 'packageName:'${env:packageName}

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ env.targetName }}-${{ matrix.qt_arch }}
          path: tmp-install\${{ env.targetName }}-${{ matrix.qt_arch }}
